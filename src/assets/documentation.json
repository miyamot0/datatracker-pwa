{"information":[{"value":"\r\n\r\nThe DataTracker program makes it easy to calculated several forms of Interrater Reliability. This is a measure of the agreement between two or more raters. The program can calculate several forms of agreement. As a general default, agreement is estimated using 10s bins of data recorded in real time through the session.\r\n\r\n### Exact Interval Agreement (EIA)\r\n\r\nThe EIA is the percentage of intervals in which the raters agree on the exact same behavior. This is the most stringent form of agreement. It is calculated as follows:\r\n\r\nEIA = (Number of Matching Intervals / Total Number of Intervals) \\* 100\r\n\r\n### Partial Interval Agreement (PIA)\r\n\r\nThe PIA is the percentage of intervals in which the raters agree on the presence of the behavior. This is a less stringent form of agreement. It is calculated by _averaging_ the percentage of intervals in which the raters agree on the presence of the behavior. It is calculated by dividing the lower of the two values by the higher of the two values and multiplying. This is done for each bin and then averaged across all 10s bins.\r\n\r\nPIA[n] = (min(Value) / max(Value))\r\n\r\nPIA = mean(PIA) \\* 100\r\n\r\n### Total Interval Agreement (TIA)\r\n\r\nThe TIA is the percentage of intervals in which the raters agree on either the presence of _some_ behavior or the _absence_ of behavior.\r\n\r\nTIA = (Bins with Agreement / Total Number of Bins) \\* 100\r\n\r\n### Occurrence Interval Agreement (OIA)\r\n\r\nThe OIA is the percentage of intervals in which the raters agree on the _presence_ of behavior. In most ways, it is much like the TIA but specific to intervals with _some_ behavior.\r\n\r\nOIA = (Bins with Agreement / Total Number of Bins) \\* 100\r\n\r\n### Non-occurrence Interval Agreement (NIA)\r\n\r\nThe NIA is the percentage of intervals in which the raters agree on the _absence_ of behavior. It is essentially the _inverse_ of OIA.\r\n\r\nNIA = (Bins with Agreement / Total Number of Bins) \\* 100\r\n\r\n### Responses per Minute Agreement (RPMA)\r\n\r\nThe RPMA is the number of responses per minute that the raters agree on. In essence, it functions like a 60s bin scoring rather than a 10s bin scoring. In this fashion, it is largely like EIA.\r\n\r\nRPMA = (60s Bins with Agreement / Total Number of 60s Bins) \\* 100\r\n","matter":{"title":"Reviewing Rater Reliability for Specific Evaluation Data","filename":"calculate_reliability.mdx","date":"09/31/2024","keywords":"Rater Reliability Inspection, Data Export","author":"Shawn Gilroy","index":10}},{"value":"\r\n\r\nThe **Individual** folders, which are nested under respective **Group** folders, are a critical part of the data management strategy and hierarchy. These folders are dedicated to housing _all_ data related to a specific participant or subject within the larger context of a research study or clinical service (e.g., inpatient vs. outpatient care). Each **Individual** folder is named after the participant it represents, typically using a unique identifier such as a participant ID or name, like \"Participant_001\" or \"Subject_A.\" This structure ensures that all data collected from a particular individual is systematically stored in one location, facilitating easy access and analysis. As a note, you must follow research and clinical data management practices for your institution when naming and storing data; however, Data Tracker works only on local data and no information is ever transmitted to the internet.\r\n\r\nThe primary purpose of the **Individual** folder is to maintain the integrity and continuity of data for each participant throughout the process of recording and interpreting data (e.g., research, care). Since coordinating support often involves multiple Evaluations (e.g., assessments over time), the **Individual** folder acts as a centralized repository where all data related to a single participant are aggregated. This organization is particularly beneficial in longitudinal and times-series studies, where tracking changes in behavior or responses over time is central to the approach. By keeping all relevant data within one **Individual** folder, researchers can easily follow the progression of a participant's performance or responses, ensuring that no data is lost or misattributed.\r\n\r\nFor example, consider a study examining the effects of communication training on social interactions in children with autism. Each child participating in the study would have their own **Individual** folder, such as \"Participant_001\" or \"Child_Autism_001.\" Within this folder, researchers would store all data collected from that child, including baseline assessments, intervention sessions, and follow-up evaluations. This approach allows researchers to track the child's progress over time, compare results across different assessments, and analyze the impact of the intervention on their social skills. By maintaining a clear and consistent structure for **Individual** folders, researchers can ensure that data is well-organized, accessible, and accurately attributed to the correct participant.\r\n\r\nThe rationale for this structure is to provide a systematic way to organize participant-specific data, ensuring that all information is easily traceable back to the individual it pertains. This not only aids in data analysis but also supports accurate record-keeping, which is vital for the credibility and reproducibility of research findings. Furthermore, this organization helps prevent data from different participants from becoming mixed up, reducing the likelihood of errors in data interpretation or reporting. By implementing a clear and consistent naming convention for **Individual** folders, the program enhances data management practices, making it easier for researchers to handle large datasets and collaborate effectively within research teams.\r\n","matter":{"title":"Creating and Working with Individual Client Folders","filename":"create_clients.mdx","date":"09/02/2024","keywords":"Data Organization, Client Case Management","author":"Shawn Gilroy","index":3}},{"value":"\r\n\r\nThe **Condition** folders, which are located within specific **Evaluation** folders, are critical for organizing data according to some specific condition or experimental arrangement under which behavior was observed. Separating observed data into these folders allows clinicians/researchers to differentiate between various scenarios or interventions that a client had participated within. Each **Condition** folder is labeled based on the particular arrangement/modification it represents, such as \"Baseline\" or \"Intervention\" in an intervention evaluation. This organization is especially useful in behavioral studies, where understanding the impact of different conditions on a participant's behavior is often essential (e.g., functional analysis across multiple conditions).\r\n\r\nThe purpose of the **Condition** folder is to provide a clear and organized way to separate data collected under different experimental circumstances. In studies focusing on behavioral interventions for children with behavior issues, this might include comparing a child's behavior during a baseline period (i.e., prior to exposure to intervention) to behavior observed during/after participating in intervention. For example, a \"Baseline\" **Condition** folder could contain data from sessions where the child's behavior was observed without any interventions in place. In contrast, an \"Intervention\" **Condition** folder would include data from sessions where specific behavioral strategies, such as positive reinforcement, were applied. This separation allows researchers to make clear comparisons between conditions, helping to identify which interventions are most effective.\r\n\r\nFor example, consider a study aimed at reducing aggressive behavior in children through a structured intervention program. For \"Participant_001\", the **Evaluation** folder for \"Treatment Evaluation\" might include two **Condition** folders: \"Baseline\" and \"Intervention.\" The \"Baseline\" folder would contain would contain data recordings were the child's behavior was monitored without any intervention (e.g., could capture rates of aggression in these settings). The \"Intervention\" folder, on the other hand, would house similar types of data collected when specific behavioral techniques, such as reward systems, were actively being used to manage and reduce aggression. By comparing the data in these two folders, researchers can assess how the child's behavior changed from the \"Baseline\" to the \"Intervention\" phase, providing insights into the effectiveness of the strategies employed.\r\n\r\nThe rationale behind using \"Condition\" folders is to ensure that data collected under different experimental conditions is kept distinct and organized. This is vital for accurately analyzing the impact of various ecological arrangements on behavior. By maintaining a clear distinction between conditions, researchers can avoid confusion and ensure that their analyses are based on accurate, well-organized data. This structure also supports the reproducibility of the study, as it allows other researchers to clearly see how each condition was defined and assessed. In behavioral intervention studies, where nuanced differences between conditions can significantly influence outcomes.\r\n","matter":{"title":"Creating and Working with Condition Folders in Evaluations","filename":"create_conditions.mdx","date":"09/03/2024","keywords":"Data Management, Assessment, Intervention Evaluation","author":"Shawn Gilroy","index":5}},{"value":"\r\n\r\nThe **Evaluation** folders, which are found within respective **Individual** folders, are essential for organizing data from specific sessions conducted with a client/participant. These folders capture snapshots of a participant's behavior in a specific context (e.g., assessment vs. treatment) at distinct points in time. Each **Evaluation** folder is typically labeled according to the procedure or method. For example, one evaluation might consist of a \"Functional Analysis\" while another might consist of a \"Treatment Evaluation.\" This naming convention helps researchers and clinicians quickly identify the purpose of each Evaluation and understand the context from which recorded data had emerged.\r\n\r\nThe primary function of the **Evaluation** folder is to keep data from different contexts distinct and organized, making it easier for clinicians/researchers to analyze behavioral changes over time. This is particularly important in studies focusing on behavioral interventions, such as those targeting autism. For example, if a participant with autism is participating in a functional communication intervention, the **Evaluation** folder (e.g., \"FC Treatment Evaluation\") would contain data from the specific sessions and conditions where behavior was measured. This approach allows clinicians and researchers to compare behavior over time, compare changes across conditions/contexts, and adjust intervention as needed.\r\n\r\nFor example, in a study examining the effectiveness of a new behavioral therapy for children with autism, a participant might participate in the evaluation of multiple behavior intervention approaches. For \"Client_001,\" you could have **Evaluation** folders such as \"Functional Analysis\" (which would take place before a treatment were to be developed) and \"Treatment Evaluation.\" Each **Evaluation** folder would contain data that are associated with specific contexts and procedures (e.g., Baseline, Intervention A, Intervention B). This structured approach ensures that data from each session is easily accessible and comparable, which is crucial for drawing inferences about specific arrangements and their effects on behavior.\r\n\r\nThe rationale behind using **Evaluation** folders in this fashion is to facilitate a structured and understandable organization of data. By keeping data from each **Evaluation** in a designated folder, clinicians/researchers can maintain a clear and orderly record of behavior and the specific conditions under which it was observed. This organization is particularly useful for behavioral assessments and intervention evaluations, where tracking changes in behavior over time is essential for understanding behavior.\r\n","matter":{"title":"Creating and Working with Evaluation Folders for Individuals","filename":"create_evaluations.mdx","date":"09/03/2024","keywords":"Data Management, Assessment, Intervention Evaluation","author":"Shawn Gilroy","index":4}},{"value":"\r\n\r\nThe **Group** folder is the largest element in the organizational hierarchy of the Data Tracker program. For these categories/groups, these are likely to function as the primary container for data collected in a specific study, a research project, or as a part of clinical service (e.g., inpatient vs. outpatient). The goal of this distinction is to encapsulate context and make it easier to find and manage data files outside of the program (if necessary, _not recommended_). The following is a description of the different levels of the file hierarchy and what they represent.\r\n\r\nWithin the **Group** folder, data will be organized into subfolders representing individual participants or subjects. The Group folder itself sets the stage for the entire organizational structure and allows the program to form associations between recorded data. It is critical to thoughtfully name and maintain these **Group** folders because they act as an umbrella under which all individual-level data will be aggregated and organized. This organization prevents data from different studies from accidentally mixed up or exposed, which is important in research environments where multiple studies might be conducted simultaneously. By keeping each study's data compartmentalized within its own **Group** folder, researchers can avoid confusion and ensure that all analyses and reports are based on the correct datasets.\r\n\r\nFor example, imagine a research lab conducting several studies simultaneously, such as multiple novel extensions of an existing procedure. In this case, you would create two distinct **Group** folders, named \"Study Name A\" and \"Study Name B.\" Each folder would contain all relevant data for its respective study, including participant data, evaluation results, and specific experimental conditions. This clear separation allows researchers to focus on each study individually, ensuring that data integrity is maintained. Moreover, if a researcher needs to revisit the \"Study Name A\" study for further analysis or publication, they can quickly locate all related data within its dedicated Group folder. This system not only enhances efficiency but also supports accurate data management practices, which are critical for the credibility and reproducibility of research findings.\r\n\r\nThe rationale behind this structured approach is to promote a systematic, error-free method of data organization that scales well with the complexity and size of research projects. By organizing data within well-defined **Group** folders, the program helps researchers manage vast amounts of information in a way that is both logical and accessible. This structure minimizes the risk of data mismanagement, facilitates collaboration among research teams, and supports the long-term storage and retrieval of research data, which is essential for ongoing and future studies.\r\n","matter":{"title":"Creating and Working with Group Folders","filename":"create_groups.mdx","date":"09/01/2024","keywords":"Data Organization, Study Planning/Management","author":"Shawn Gilroy","index":2}},{"value":"\r\n\r\nThe **Keyboard** functionality offered by Data Tracker allows users to efficiently record and track specific behaviors during observation sessions in real time. By mapping keys on a keyboard to particular behaviors (e.g., \"1\" represents and instance of \"Aggression\"), the program can be used to perform data collection across multiple targets as behavior occurs. Each **Keyboard** (i.e., mappings of keys to behavior, of which there can be multiple) customized to include _two_ types of key/behavior mappings: \"Frequency Keys\" and \"Duration Keys\". These mappings help users accurately record behaviors that are best measured either by how often they occur (Frequency) or by how long they last (Duration).\r\n\r\n### Key/Behavior Mappings for Frequency Measurement\r\n\r\nFrequency key/behavior mappings are designed for behaviors that are easily counted and typically occur in discrete instances. For example, in a child behavior intervention study, a user might map the \"1\" key to record instances of \"_Physical_ Aggression\" and the \"2\" key to record instances of \"_Verbal_ Aggression.\" Every time the child hits another person, the user presses the \"1\" key, and the program logs each occurrence. Every time the child exhibits verbal aggression, the user simply presses the \"2\" key. DataTracker will log each occurrence to facilitate calculations of behavior rates as well as inter-rater agreement. This method allows for quick and accurate counting of behaviors that are frequent and distinct, providing valuable data on the frequency of specific actions over time.\r\n\r\n### Key/Behavior Mappings for Duration Measurement\r\n\r\nDuration key/behavior mappings, on the other hand, are used for behavior that is better measured by the length in time it occurs rather than by count (e.g., one tantrum lasting 5 minutes vs 1 tantrum lasting 30 minutes). These are typically types of behavior that start and stop, where the duration is a critical aspect of the behavior. For instance, in the same child behavior intervention study, the \"D\" key might be mapped to \"Tantrum Duration.\" When a tantrum begins, the user presses the \"D\" key to start recording, and when the tantrum ends, the user presses the key again to stop the recording. The program then calculates and logs the total duration of the tantrum, providing insights into how long such episodes last and whether there is a change in duration over the course of the intervention.\r\n\r\n## Reasoning and Rationale for Key/Behavior Mappings\r\n\r\nThe rationale behind these customizable key/behavior mappings is to streamline the data collection process, allowing for precise and consistent recording of behaviors. By tailoring the **Keyboard** to specific individuals and behavior relevant to the study, users can ensure that all relevant targets are accurately documented, facilitating better analysis and more effective intervention. This feature is particularly valuable in behavioral studies, where both the frequency and duration of behaviors can provide critical insights into the effectiveness of an intervention or the progression of a condition.\r\n\r\nAdditionally, each **Keyboard** (Note: there can be multiple keyboards) is specific to \"Individual\" and not to \"Evaluation\". For example, it may be easiest to stick with an **Keyboard** from the \"Functional Analysis\" beginning the \"Treatment Evaluation\", since data recorders have already been trained on those key/behavior mappings. Ultimately, it is not required to work from a single **Keyboard** for individuals and multiple **Keyboard** files can be created as necessary.\r\n","matter":{"title":"Creating and Managing Key/Behavior Mappings (\"Keyboards\")","filename":"create_keyboards.mdx","date":"09/03/2024","keywords":"Key/Behavior Mappings, Frequency Counting, Duration Tracking","author":"Shawn Gilroy","index":6}},{"value":"\r\n\r\nThe **Session Designer** is a critical element of the DataTracker program. This interface allows users to set up and customize details for a specific type of session. This interface is designed to be used in relation to a particular **Evaluation** folder, which enabling users to configure the necessary parameters for recording and analyzing behavior during a session for that **Evaluation** (e.g., \"Control\" vs. \"Test\" **Condition**). The **Session Designer** is where users can define the session's structure (e.g., duration of session, how it should conclude), so that aspects of the data collection process are aligned with the study's goals and requirements. As a general default, the **Session Designer** supports the user by caching session parameters to simplify operations, such as incrementing session numbering after each session and automatically populating prior parameters.\r\n\r\n### Adding/Selection Evaluation Condition\r\n\r\nThe first step in the **Session Designer** is selecting the relevant **Condition**. This corresponds with the various conditions outlined in the study/treatment protocol. This dropdown menu allows users to choose from conditions outlined by the user, such as \"Baseline\" or \"Intervention\". For example, if the session involves observing a child under the \"Intervention\" condition, the user would select this option to ensure that all data recorded during the session is associated with the correct experimental context. This ensures that the data collected can be accurately compared with other sessions under different conditions. As an added note, if a necessary condition is not present, the user can add a new condition to the list using the button provided on the **Session Designer** page.\r\n\r\n### Choosing the Keyboard Configuration\r\n\r\nThe next step involves selecting the appropriate **Keyboard** configuration the session. This involves choosing a pre-defined **Keyboard** that maps specific keys to behaviors, as described earlier. Specifically, any of the mappings relevant to the current individual can be selected. To assist in confirming that the correct **Keyboard** is selected, the user is presented with the relevant mappings within the **Session Designer** page. This ensures that the data collected during the session is accurately categorized and recorded according to the specified key/behavior mappings. As a note, key/behavior mappings cannot be changed on this screen and this must be done in another, more specialized part of the application.\r\n\r\n### Specifying the Session Therapist\r\n\r\nThe **Session Designer** allows for the data collector to specify the **Session Therapist** in the \"Session Therapist ID\" field. As a general practice, this is often simply the initials of the session therapist (e.g., \"SPG\"). This is important for maintaining accurate records of who is administering the intervention. For example, if \"SPG\" is conducting the session, this ID would be entered into the relevant text field to link the session data with that specific therapist. This can be particularly important in studies where different therapists may vary in some dimension relevant to a tracked behavior (e.g., larger therapist size, male vs. female).\r\n\r\n### Specifying the Data Collector and Role\r\n\r\nThe **Session Designer** also allows for the identification of the **Data Collector** in the \"Data Collector ID\" field. This ensures that there is a record of who was performed the data collection, which is essential for accountability and reliability (e.g., if 'drift' in recording has taken place for a data collector). In practice, this is also often the initials of the data collector (e.g., \"Collector_002\"). This is especially important in cases where multiple data collectors (i.e., more than two) are involved in a case or study.\r\n\r\nIn addition, the **Data Collector Role** for the current data collector is also specified in the **Session Designer**. The user must indicate whether they are serving as the **Primary Data Collector** or as a **Reliability Data Collector**. The **Primary Data Collector** is the main person responsible for recording data, whereas a **Reliability Data Collector** is used to explore the accuracy and consistency of data recording. It is critical that the user selects the correct role for the data collector, as calculations of observer agreement (discussed elsewhere) focus on evaluating correspondence between a \"Primary\" and a \"Reliability\" record.\r\n\r\n### Setting the Session Duration\r\n\r\nUsers can also define the **Session Duration** by specifying the duration of the session in seconds (e.g., 10m = 600s). This parameter sets the total time for the session, which helps to standardize the length of session. For example, if the session is intended to last 600 seconds (10 minutes), this value is entered to ensure that all data collected fits within this time frame, providing a consistent basis for comparison with other sessions (e.g., consistent interpretation of 'rates', with common amount of time).\r\n\r\n### Setting Session Termination Rules\r\n\r\nThe user must specify how the session should terminate by selecting _which_ timer should be used to conclude the session (e.g., Total time reaching **Session Duration** vs. Timer #1 reaching **Session Duration**). By default, the option for \"End on Primary Timer\" means that the session will conclude when the primary timer reaches the session duration. However, DataTracker provides multiple timers that can be used to end session under specific conditions, allowing for flexibility in how the session is terminated. This ensures that the session ends at the appropriate time based on the specific requirements of the study.\r\n\r\nFor example, it may be necessary to distinguish between \"time spent working\" from \"time when reinforcers were being accessed/consumed.\" In this example, Timer #1 (the 'main timer') would correspond with 'work time' and another timer (e.g., Timer #2) would correspond with 'reinforcement time.' In this arrangement, one might choose to have the session 'End on Timer #1' meeting the session duration, since it would partial out 'work time' from 'reinforcement time' in the calculations of behavior rates.\r\n\r\nDataTracker allows for the use of up to _three_ timers; with each timer providing flexibility in the customization of session termination rules. These are purely optional and useful insofar as they meet the specific needs of studies and evaluations.\r\n\r\n### Session Numbering\r\n\r\nThe **Session Number** field allows the user to specify which session is being conducted. This is useful because participants undergo multiple sessions over time and this allows for a visualization of behavior changes over time. For example, if this is the second session for a participant, the user would enter \"2\" to clearly identify the position in the sequence of data.\r\n\r\nAdditionally, DataTracker will attempt to 'remember' sessions and increment the session number automatically. This numbering helps in tracking progress and minimizing the risk of human error.\r\n\r\n## Conclusion and Summary\r\n\r\nThe Session Designer is a comprehensive tool that provides users with the flexibility and control needed to set up each session accurately. By carefully configuring each aspect of the session, from condition selection to session termination, researchers can ensure that their data collection process is precise, consistent, and tailored to the specific requirements of their study.\r\n","matter":{"title":"Customizing Session Parameters using Session Designer Page","filename":"design_sessions.mdx","date":"09/31/2024","keywords":"Session Designer, Session Conditions, Timers","author":"Shawn Gilroy","index":7}},{"value":"\r\n\r\nThe DataTracker program is designed to provide considerable flexibility in how data are collected and managed. This flexibility allows you to structure your data in a way that makes sense for your specific needs and research questions. However, there are several critical and recommended organizational structures to follow to ensure that data are easily accessible and manageable. This document provides an overview of the recommended organizational structure for data within the DataTracker program and outlines some general rules to follow when using the program.\r\n\r\n### Approving DataTracker access\r\n\r\nDataTracker is a website at its core--it does not have access to your hard drive as an installable program would. For this reason, you are prompted to approve the program access to **a specific** folder on your hard drive whenever you use it. This is happen once **every time** you use the program for security purposes. As a general practice (Note: which can be disabled), you program will prompt you to use a Folder (wherever it is located) named DataTracker (e.g., \"DataTracker\" folder on your Desktop). This is largely as a prompt for users not to accidentally load a \"Group\" folder as if it were a \"DataTracker\" folder. This can be disabled, but for good practice, it is kept as a default setting.\r\n\r\n### Some General Rules for Working with DataTracker Data\r\n\r\nMany aspects of the program can be customized to fit your specific needs (e.g., permissions for central folder, allowing for deletion of folders). However, there are certain types of behavior that are likely to cause problems or errors when using the program. The following are some general rules to follow when working with data in the DataTracker program.\r\n\r\n#### Hand-editing data files is not a good idea\r\n\r\nThe program saves files in JSON format, which is a universal data format that can be read by many different programs. It can be read from software such as browsers, statistical software, programming languages, etc. If you attempt to edit this file by hand, without knowing the implications of what you are changing, you will cause problems when attempting to archive/read/summarize that data in the future.\r\n\r\nWhen in doubt--use the interface to manage/delete files.\r\n\r\n#### Dragging and Dropping Folders in DataTracker Folder is not a good idea\r\n\r\nCertain operations in the DataTracker program are less impactful than others. For example, adding a new folder to a group with a Participant's ID as the title is unlikely to be problematic. However, copy/pasting/renaming folders is likely to be problematic because certain aspects of the program will _expect_ certain folders to be in certain locations. This is particularly relevant for the **Session Builder**, since it will attempt to _remember_ recent sessions and conditions that may no longer exist if you have edited/deleted those folder.\r\n\r\nIf you make major changes to the folder structure, it introduces significant risks of program error.\r\n\r\n#### Copying a Keyboard (\\*\\*.json File) is Probably Okay\r\n\r\nIt is often the case that a common set of targets is shared across Participants in a study. In this case, it is likely that you will want to copy a Keyboard file from one Participant to another. This is generally okay, but it is important to remember that the Keyboard file _must be in the correct location_.\r\n\r\nIf you copy a Keyboard file to the wrong location, it will (1) not be accessible in the **Keyboard Designer** or **Session Designer** and (2) could cause the program to crash if the program reads it thinking it is a data file (e.g., when calculating Reliability or summarizing rates).\r\n\r\n#### Creating Evaluation Conditions by Hand is Probably Okay\r\n\r\nIt is likely that certain types of conditions will be used across Participants for a given **Evaluation**. For example, a \"Baseline\" condition is likely to be used for all Participants in a study. In this case, it is likely that you will want to create a \"Baseline\" by hand for each of the Participants. This is generally okay, but it is important to remember that the **Condition** folder _must be in the correct location_ and _must be empty_.\r\n\r\n#### Copying Reliability Files is Okay\r\n\r\nAs a working default, files for the Reliability data collector will need to be moved to a central location for analysis. This is expected behavior, though it is important to remember that the Reliability file _must be in the correct location_ (i.e., correct **Evaluation** and **Condition**).\r\n\r\n### Structure and Hierachy of Data Tracker Information\r\n\r\n- Group Folder (e.g., clinic, study grouping, etc.)\r\n\r\n  - Individual Folder (e.g., client name or identifier)\r\n\r\n    - 'Keyboard A.json' File (File associated with keys/behavior codes)\r\n\r\n    - Evaluation Folder (e.g., functional analysis, treatment evaluation)\r\n\r\n      - 'settings.json' File (File remembering on-going session designs)\r\n\r\n      - Condition Folder (e.g., baseline, treatment, etc.)\r\n\r\n        - Session Data File, e.g. '[Session Number]_[Condition Name]_[Primary/Reliability].json' (File recording session performances)\r\n\r\n### Descriptions for Each Level of File Hierarchy\r\n\r\nAs a working default, individual data files are organized semantically on your hard drive. This means that the structure of the data files on your hard drive should reflect the structure of the data in the program. This is done to make it easier to find and manage data files outside of the program. The following is a description of the different levels of the file hierarchy and what they represent.\r\n\r\n#### Group-Level Folder (Grouping by Clinic, Study, etc.)\r\n\r\nThe highest organizational level is the **Group** folder, which serves as a container for all data related to a specific study, clinical group, or research project. Each Group folder can be named however you wish, though it is recommended to be short and easily discriminable. For example, a Group folder might be labeled \"Novel Preference Study 2024\" as a means of grouping individual that are specific to this study in this area on your hard drive.\r\n\r\n#### Individual-Level Folder (Grouping by Individuals)\r\n\r\nWithin each Group folder, there are **Individual** folders that each representing a unique participant or subject. These folders are named after the individual they pertain to, often using a participant ID or name, such as \"Participant_001\" or \"Subject_A.\" These folders contain all data collected for that specific individual throughout the study, which are further delineated in terms of specific procedures.\r\n\r\n#### Evaluation-Level Folder (Grouping by Purpose of Data)\r\n\r\nNested within each Individual folder are **Evaluation** folders. Each Evaluation folder corresponds to a distinct procedure (e.g., functional analysis). For example, data for one individual may emerge from a preference assesment in one Evaluation folder and a treatment evaluation in another. These folders are labeled according to the procedure or assessment they contain, such as \"Functional Analysis\" or \"Treatment Evaluation.\" This level organizes the data collected from each session.\r\n\r\n#### Condition-Level Folder (Grouping by condition; e.g., baseline, treatment, etc.)\r\n\r\nAt the most granular folder level is the **Condition** folder. Each Condition folder represents a specific condition, task, or experimental setup under which the individual's behavior was recorded during the evaluation. For example, a Condition folder might be named \"Baseline\" or \"Intervention\" to distinguish between data collected in varying contexts within a specific evaluation (e.g., conditions of functional analysis).\r\n","matter":{"title":"Organizational Structure and Design","filename":"information.mdx","date":"08/31/2024","keywords":"Program Introduction, Data Organization","author":"Shawn Gilroy","index":1}},{"value":"\r\n\r\nThe **Session Recorder** page is the main interface for actively collecting data while session is underway. This page integrates the parameters set in the **Session Designer**, including the **Keyboard** (i.e., behavior/key mappings). Once the session begins, the data collector uses the pre-defined keys to log behaviors and manage timers in real-time. The interface is designed for efficiency and accuracy, ensuring that all relevant data is captured during the observation period.\r\n\r\n### Beginning and Ending the Session\r\n\r\nThe session will begin when the data collector presses the 'Enter' key, which activates all the parameters configured in the **Session Designer**. The data collector can then start recording behaviors and managing timers using the designated keys. The session will continue until the user presses the 'Escape' key or until the termination criteria set in the **Session Designer** are met. Pressing 'Escape' will immediately stop all timers and end the session, ensuring that no further data is recorded beyond this point, and query whether the data collector would like to keep the data or not.\r\n\r\n### Recording Behavioral Targets\r\n\r\nThe **Session Recorder** provides the data collector with information on all relevant keys and behavior mapped in the **Keyboard**. For example, if the data collector is observing a child for instances of \"Verbal Aggression\" and the duration of \"Tantrums,\" these behaviors are mapped to specific keys (e.g., \"F\" for Verbal Aggression and \"D\" for Tantrum Duration). The data collector can press these keys to record each instance of the behavior or start/stop the duration timer for the behavior. This process is seamlessly integrated with the timers, ensuring that behaviors are accurately recorded in relation to the ongoing time frames. For ease of operation, 'active' or 'on-going' targets (e.g., tantrum episodes) are highlighted in green to illustrate that an on-going event is being recorded.\r\n\r\n### Managing Timers\r\n\r\nThroughout the session, the data collector can actively manage up to three timers using the 'Z', 'X', and 'C' keys. These timers correspond to the Primary (#1), Secondary (#2), and Tertiary timers (#3), respectively. The Primary Timer (Timer #1; e.g., 'work' or 'session' timer) is typically used to track the overall session duration, while the Secondary Timer (Timer #2) and Tertiary Timer (Timer #3) can be used to monitor other time-sensitive behaviors or events. For example, Timer #2 might track the duration of a context (e.g., time related to reinforcer delivery is handled/addressed separately). The data collector can start and stop each timer independently using the designated keys, ensuring that multiple time frames are accurately recorded during the session.\r\n\r\n### Procedures for Terminating Session\r\n\r\nThe session concludes when the predefined termination criteria are met, as set in the **Session Designer**. This could occur when the 'Total Time' reaches the session duration limit, or when any of the timers (Timer #1, #2, or #3) meets the specified criteria. For example, if the session is set to end after 10 minutes for Timer #1, the session will automatically conclude when Timer #1 hits 600 seconds. Alternatively, in the case that session time is open-ended, the session can be concluded at any time; however, the user must indicate that they wish to _keep_ a 'partial' session and its data.\r\n\r\n## Summary and Overview\r\n\r\nThe **Session Recording** page is the heart of the DataTracker program. It provides a straightforward 'heads-up' display that allows data collectors to efficiently record behaviors and manage timers during observation sessions. By integrating the parameters set in the **Session Designer**, this page ensures that all data is accurately captured and organized in real-time. The user-friendly interface simplifies the data collection process, allowing researchers and clinicians to focus on the observation and analysis of participant behaviors without the need for manual data entry or post-session data processing.\r\n\r\nData recorded at the end of the session (if not discarded) is managed and stored in the respective location within the **Evaluation** folder. This data can then be accessed for further analysis, comparison, and interpretation, providing valuable insights into the behavior of participants over time.\r\n","matter":{"title":"Recording Behavior using Session Recorder Page","filename":"record_sessions.mdx","date":"09/31/2024","keywords":"Data Collection, Session Recording","author":"Shawn Gilroy","index":8}},{"value":"\r\n\r\nThe DataTracker program is, at its core, simply a **website**. Specifically, it is termed a \"Progressive Web Application\" (PWA). This means that it can be accessed through a web browser like any other website, but it also has additional features that allow it to be installed on your device like a traditional application. This allows you to use the program like a typical application and to access it quickly from your device's home screen. This is also a way to ensure that the program is always up-to-date, as it will automatically update whenever you are connected to the internet.\r\n\r\nThe DataTracker program is designed to be used on a **desktop or laptop computer**. While it can be accessed on a mobile device, the interface is not optimized for smaller screens, and some features may not work as expected. For the best experience, it is recommended to use the program on a larger screen. This is particularly relevant since it is designed to support recording a wide range of behavioral targets simultaneously, which can be difficult to manage on a small screen and without a keyboard.\r\n\r\n### Installation Options\r\n\r\nIn general, you _should_ be able to install DataTracker on your machine by using any browser of your choosing. However, the program is most heavily testing for use with **Google Chrome**. It should function similarly across operating systems; however, Apple support for PWA's is somewhat mixed (i.e., installing through **Apple Safari** is completely disabled in some regions). It remains possible to install as a PWA through **Google Chrome** on Apple devices, but this is not as straightforward a process (i.e., it can be pinned to the Menu Bar to emulate app behavior).\r\n\r\n**You may use DataTracker completely without ever installing it on your device**; However, if you wish to use the program in a more native fashion or access it more quickly, you might consider installing it locally on your machine. Although there are not extra features provided by installing the program, it is often convenient and provides flexibility.\r\n\r\n#### Recommended Option: Using/Installing with Google Chrome\r\n\r\nThe installation of DataTracker on **Google Chrome** is the most straightforward. When you first visit the DataTracker website, you will be presented with a button that prompts the installation of the program. Clicking this button will install DataTracker on your device, and you will be able to access it from your home screen or app drawer like any other application (Note: On MacOS, this will be a 'Chrome web app', but it can be pinned to the Menu bar).\r\n\r\n#### Windows Alternative: Installation on Microsoft Edge\r\n\r\nThe installation process for **Microsoft Edge** is similar to that of Google Chrome. If on a Windows machine, you may find it more convenient and prefer to install DataTracker through **Microsoft Edge**. The installation process is the same as for Google Chrome, and you will be able to access the program from your home screen or app drawer.\r\n\r\n#### Installation on Apple Safari\r\n\r\nInstallation on **Apple Safari** is only possible for those running the Ventura build of the MacOS; however, this is not universally supported and may not be available in all regions. Should your machine meet all the criteria listed by Apple, you would have to navigate to the DataTracker website and manually install the program as a PWA (i.e., File > \"Add to Dock\"). As a more straightforward alternative, you may install the program through **Google Chrome**.\r\n","matter":{"title":"Program Use, Installation Options, and General Guidance","filename":"setup.mdx","date":"08/31/2024","keywords":"Program Use, Installation","author":"Shawn Gilroy","index":0}},{"value":"\r\n\r\nThe DataTracker provides a way to view the data from an **Evaluation**. This is useful for inspecting the data that was collected during for a session as well as across various sessions and conditions (e.g., Attention, Demand conditions of functional analysis). Options for working with saved **Evaluation** data can be found by selecting the \"View Evaluation Data\" from the dropdown menu in the **Evaluation** page. Clicking on this entry in the dropdown will navigate to the **View Evaluation Data** page.\r\n\r\n### Interpreting Saved Session Data\r\n\r\nThe **View Evaluation Data** page provides a table of the data collected during the **Evaluation**. The table provides information related to the _rate_ of behavior for \"Frequency\" keys and the _proportion_ of session time for \"Duration\" keys. When in doubt, the most clear and straightforward representation is the \"Count\" or \"Seconds\" recorded for each key.\r\n\r\n#### Frequency Data Table\r\n\r\nThe frequency data table provides a summary of the data collected during the **Evaluation**. The data includes a \"Count\" for each Session and a _rate_ is calculated for the **Total Session Time**; however, this may or may not be the information most useful for a given **Evaluation**. For example, if the session incorporated **two timers**, you would likely wish to calculate rate based on the minutes recorded in either \"Timer #1\" or \"Timer #2\" rather than the \"Main Timer\".\r\n\r\n#### Duration Data Table\r\n\r\nThe duration data table provides a summary of the data collected during the **Evaluation**. The data includes a \"Seconds\" for each Session and a _proportion_ of the **Total Session Time**; however, this may or may not be the information most useful for your **Evaluation**. For example, if the session incorporated **two timers**, you would likely wish to calculate the proportion of session based on the minutes recorded in either \"Timer #1\" or \"Timer #2\" rather than the \"Main Timer\".\r\n\r\n### Exporting Data\r\n\r\nThe **View Evaluation Data** page provides an option to export the data collected during the **Evaluation**. The data can be exported as a CSV file or as a JSON file. In short, the CSV file type is best for viewing the data in a spreadsheet program, while the JSON file type is best for viewing the data in a text editor or for use in a programming environment. Multiple formats are provided to ensure that the data can be used in a variety of ways.\r\n","matter":{"title":"Reviewing and Exporting Saved Data","filename":"view_behavior_data.mdx","date":"09/31/2024","keywords":"Data Inspection, Data Export","author":"Shawn Gilroy","index":9}}]}